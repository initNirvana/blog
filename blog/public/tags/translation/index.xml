<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Translation on 해탈의 블로그</title>
    <link>/tags/translation/</link>
    <description>Recent content in Translation on 해탈의 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/translation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Simplex Method와 양키스</title>
      <link>/2017/10/17/simplex-method-and-yankees/</link>
      <pubDate>Tue, 17 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/10/17/simplex-method-and-yankees/</guid>
      <description>George Bernard Dantzig (ˈdæntsɪɡ)가 1974년에 개발한 단체법(Simplex Method)을 보기 전에 Simplex Mothod의 뿌리인 Dynamic Programming을 보자.
잠깐, Dynamic Programming의 번역어를 아는가? 동적 계획법 혹은 다이나믹 프로그래밍이 익숙할 것이다. 이 용어는 수학자 리처드 벨만(Richard E. Bellman)이 정의한 용어인데, 당시 Dynamic Programming이라고 한 이유를 그의 자서전(Eye of the Hurricane: An Autobiography)에서 볼 수 있다.
 나는 RAND 코퍼레이션에서 1950년의 가을을 보냈다. 여기에서 내게 주어진 첫 과제는 다단계 의사 결정 프로세스에 대해 적절한 용어를 명명하는 것이었다.</description>
    </item>
    
    <item>
      <title>97년도 전산 순화 용어 그리고 한자</title>
      <link>/2017/07/10/once-upon-a-time/</link>
      <pubDate>Mon, 10 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/07/10/once-upon-a-time/</guid>
      <description>글을 쓰거나 통신을 하는데 필수적인 것은 서로 의미를 정확하게 이해할 올바른 용어 사용이다. 같은 단어를 사용하더라도 의미가 불분명하거나 이해하기 어렵게 사용한다면 의미를 제대로 전달할 수 없을것이다. 이번 글에서는 97년도 전산 순화 용어 를 살펴보자. 오래된 전공책으로 공부한 사람들은 눈에 익은 단어들도 있을 것이다. 97년도에서 제안하여 지금까지 남아있는 단어도 있을 수도 있다. 그리고 단어에 따라 복합적인 결과일 수도 있다. 다음의 용어들은 통일할 수 있기를 바라는 점에서 제안을 했다는 것을 유의해야한다.</description>
    </item>
    
    <item>
      <title>Load를 불러오시겠습니까?</title>
      <link>/2017/06/17/take-your-load/</link>
      <pubDate>Sat, 17 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/17/take-your-load/</guid>
      <description>예전에 TAOCP 1권의 MMIX 부분을 읽고 있던 중 적재(load)라는 단어를 보게 되었다. LDA는 알고 있었으나 Load라는 단어의 뜻은 불러오기밖에 몰랐었다.
일단 TAOCP 1권에서 LDA를 설명하는 인용1을 보도록 하자.
 LDA (load A; A에 적재). C = 8; F = 필드
CONTENTS(M)의 지정된 필드로 레지스터 A의 이전 내용을 대체 한다.  부분 필드가 입력으로 쓰이는 모든 명령에서, 필드 자체에 부호가 포함되어 있으면 그 부호가 쓰이고, 그렇지 않으면 부호는 +로 간주된다. 레지스터에 적재될 때, 필드는 그 오른쪽 끝이 레지스터의 오른쪽 끝에 일치하도록 적절히 이동된다.</description>
    </item>
    
    <item>
      <title>컴퓨터 과학 번역어의 어려움</title>
      <link>/2017/05/14/computer-science-translated-words/</link>
      <pubDate>Sun, 14 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/05/14/computer-science-translated-words/</guid>
      <description>프로그래밍 용어, 무리해서 번역하지 말고 사용합시다를 예전에 읽었었는데, 참 공감이 가는 글이다. 그러나 글을 쓸 때의 대전제는 읽기 쉬운 글을 쓴다는 것이다. 알기 쉽도록 하기 위해선 어느정도 용어를 번역해야 한다.
위키백과에서 충격받은 번역어 번역할 때 한국어 위키백과 참고를 많이 참고하는 편은 아니지만, 적어도 한번은 번역 용어를 어떻게 사용하고 있는지 알아보기 위해 참고한다. 이전에 책에서 본 번역가들이 참고했다고 했던 위키백과 참고해보려고 했으나 내용이 빈약하다. 그리고 정말 실력있는 에디터가 위키백과 수정을 하고 있는지 의문이다.</description>
    </item>
    
  </channel>
</rss>